// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.6.1
// source: recordstats.proto

package proto

import (
	proto1 "github.com/brotherlogic/recordcollection/proto"
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastListenTime int64                                     `protobuf:"varint,1,opt,name=last_listen_time,json=lastListenTime,proto3" json:"last_listen_time,omitempty"`
	CompleteSales  []*CompleteSale                           `protobuf:"bytes,2,rep,name=complete_sales,json=completeSales,proto3" json:"complete_sales,omitempty"`
	Auditions      []*Auditioned                             `protobuf:"bytes,3,rep,name=auditions,proto3" json:"auditions,omitempty"`
	Filed          map[int32]proto1.ReleaseMetadata_FileSize `protobuf:"bytes,4,rep,name=filed,proto3" json:"filed,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=recordcollection.ReleaseMetadata_FileSize"`
	FiledTime      map[int32]int64                           `protobuf:"bytes,5,rep,name=filed_time,json=filedTime,proto3" json:"filed_time,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	LbLastTime     map[int32]int64                           `protobuf:"bytes,6,rep,name=lb_last_time,json=lbLastTime,proto3" json:"lb_last_time,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	LbLastTimeHigh map[int32]int64                           `protobuf:"bytes,7,rep,name=lb_last_time_high,json=lbLastTimeHigh,proto3" json:"lb_last_time_high,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	LastListen     map[int32]int64                           `protobuf:"bytes,8,rep,name=last_listen,json=lastListen,proto3" json:"last_listen,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recordstats_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_recordstats_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_recordstats_proto_rawDescGZIP(), []int{0}
}

func (x *Config) GetLastListenTime() int64 {
	if x != nil {
		return x.LastListenTime
	}
	return 0
}

func (x *Config) GetCompleteSales() []*CompleteSale {
	if x != nil {
		return x.CompleteSales
	}
	return nil
}

func (x *Config) GetAuditions() []*Auditioned {
	if x != nil {
		return x.Auditions
	}
	return nil
}

func (x *Config) GetFiled() map[int32]proto1.ReleaseMetadata_FileSize {
	if x != nil {
		return x.Filed
	}
	return nil
}

func (x *Config) GetFiledTime() map[int32]int64 {
	if x != nil {
		return x.FiledTime
	}
	return nil
}

func (x *Config) GetLbLastTime() map[int32]int64 {
	if x != nil {
		return x.LbLastTime
	}
	return nil
}

func (x *Config) GetLbLastTimeHigh() map[int32]int64 {
	if x != nil {
		return x.LbLastTimeHigh
	}
	return nil
}

func (x *Config) GetLastListen() map[int32]int64 {
	if x != nil {
		return x.LastListen
	}
	return nil
}

type Auditioned struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceId   int32 `protobuf:"varint,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	Valid        bool  `protobuf:"varint,2,opt,name=valid,proto3" json:"valid,omitempty"`
	LastAudition int64 `protobuf:"varint,3,opt,name=last_audition,json=lastAudition,proto3" json:"last_audition,omitempty"`
	AudScore     int32 `protobuf:"varint,4,opt,name=audScore,proto3" json:"audScore,omitempty"`
}

func (x *Auditioned) Reset() {
	*x = Auditioned{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recordstats_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Auditioned) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Auditioned) ProtoMessage() {}

func (x *Auditioned) ProtoReflect() protoreflect.Message {
	mi := &file_recordstats_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Auditioned.ProtoReflect.Descriptor instead.
func (*Auditioned) Descriptor() ([]byte, []int) {
	return file_recordstats_proto_rawDescGZIP(), []int{1}
}

func (x *Auditioned) GetInstanceId() int32 {
	if x != nil {
		return x.InstanceId
	}
	return 0
}

func (x *Auditioned) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

func (x *Auditioned) GetLastAudition() int64 {
	if x != nil {
		return x.LastAudition
	}
	return 0
}

func (x *Auditioned) GetAudScore() int32 {
	if x != nil {
		return x.AudScore
	}
	return 0
}

type CompleteSale struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceId int32 `protobuf:"varint,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	HasCost    bool  `protobuf:"varint,2,opt,name=has_cost,json=hasCost,proto3" json:"has_cost,omitempty"`
}

func (x *CompleteSale) Reset() {
	*x = CompleteSale{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recordstats_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteSale) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteSale) ProtoMessage() {}

func (x *CompleteSale) ProtoReflect() protoreflect.Message {
	mi := &file_recordstats_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteSale.ProtoReflect.Descriptor instead.
func (*CompleteSale) Descriptor() ([]byte, []int) {
	return file_recordstats_proto_rawDescGZIP(), []int{2}
}

func (x *CompleteSale) GetInstanceId() int32 {
	if x != nil {
		return x.InstanceId
	}
	return 0
}

func (x *CompleteSale) GetHasCost() bool {
	if x != nil {
		return x.HasCost
	}
	return false
}

type GetStatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceId int32 `protobuf:"varint,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
}

func (x *GetStatsRequest) Reset() {
	*x = GetStatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recordstats_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatsRequest) ProtoMessage() {}

func (x *GetStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_recordstats_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatsRequest.ProtoReflect.Descriptor instead.
func (*GetStatsRequest) Descriptor() ([]byte, []int) {
	return file_recordstats_proto_rawDescGZIP(), []int{3}
}

func (x *GetStatsRequest) GetInstanceId() int32 {
	if x != nil {
		return x.InstanceId
	}
	return 0
}

type GetStatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetStatsResponse) Reset() {
	*x = GetStatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recordstats_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatsResponse) ProtoMessage() {}

func (x *GetStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_recordstats_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatsResponse.ProtoReflect.Descriptor instead.
func (*GetStatsResponse) Descriptor() ([]byte, []int) {
	return file_recordstats_proto_rawDescGZIP(), []int{4}
}

var File_recordstats_proto protoreflect.FileDescriptor

var file_recordstats_proto_rawDesc = []byte{
	0x0a, 0x11, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x74, 0x61, 0x74, 0x73,
	0x1a, 0x45, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x72, 0x6f,
	0x74, 0x68, 0x65, 0x72, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xea, 0x06, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6c, 0x61,
	0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x40, 0x0a, 0x0e,
	0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x74, 0x61,
	0x74, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x52,
	0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x12, 0x35,
	0x0a, 0x09, 0x61, 0x75, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e,
	0x41, 0x75, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x52, 0x09, 0x61, 0x75, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x34, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x64, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x74, 0x61,
	0x74, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x64, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x64, 0x12, 0x41, 0x0a, 0x0a, 0x66,
	0x69, 0x6c, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x45,
	0x0a, 0x0c, 0x6c, 0x62, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x74, 0x61,
	0x74, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4c, 0x62, 0x4c, 0x61, 0x73, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x6c, 0x62, 0x4c, 0x61, 0x73,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x52, 0x0a, 0x11, 0x6c, 0x62, 0x5f, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x68, 0x69, 0x67, 0x68, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4c, 0x62, 0x4c, 0x61, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x48, 0x69, 0x67, 0x68, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x6c, 0x62, 0x4c, 0x61, 0x73,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x48, 0x69, 0x67, 0x68, 0x12, 0x44, 0x0a, 0x0b, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x4c, 0x61, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x1a,
	0x64, 0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x40, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a,
	0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3c, 0x0a, 0x0e, 0x46, 0x69, 0x6c, 0x65, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x1a, 0x3d, 0x0a, 0x0f, 0x4c, 0x62, 0x4c, 0x61, 0x73, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x1a, 0x41, 0x0a, 0x13, 0x4c, 0x62, 0x4c, 0x61, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x48, 0x69, 0x67, 0x68, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3d, 0x0a, 0x0f, 0x4c, 0x61, 0x73, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x84, 0x01, 0x0a, 0x0a, 0x41, 0x75, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x75, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x61, 0x75, 0x64, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x61, 0x75, 0x64, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x4a, 0x0a, 0x0c, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x68, 0x61, 0x73, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x68, 0x61, 0x73, 0x43, 0x6f, 0x73, 0x74, 0x22, 0x32, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x22, 0x12, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32,
	0x5f, 0x0a, 0x12, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x73, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x49, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x12, 0x1c, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1d, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x42, 0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62,
	0x72, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2f, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_recordstats_proto_rawDescOnce sync.Once
	file_recordstats_proto_rawDescData = file_recordstats_proto_rawDesc
)

func file_recordstats_proto_rawDescGZIP() []byte {
	file_recordstats_proto_rawDescOnce.Do(func() {
		file_recordstats_proto_rawDescData = protoimpl.X.CompressGZIP(file_recordstats_proto_rawDescData)
	})
	return file_recordstats_proto_rawDescData
}

var file_recordstats_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_recordstats_proto_goTypes = []interface{}{
	(*Config)(nil),                       // 0: recordstats.Config
	(*Auditioned)(nil),                   // 1: recordstats.Auditioned
	(*CompleteSale)(nil),                 // 2: recordstats.CompleteSale
	(*GetStatsRequest)(nil),              // 3: recordstats.GetStatsRequest
	(*GetStatsResponse)(nil),             // 4: recordstats.GetStatsResponse
	nil,                                  // 5: recordstats.Config.FiledEntry
	nil,                                  // 6: recordstats.Config.FiledTimeEntry
	nil,                                  // 7: recordstats.Config.LbLastTimeEntry
	nil,                                  // 8: recordstats.Config.LbLastTimeHighEntry
	nil,                                  // 9: recordstats.Config.LastListenEntry
	(proto1.ReleaseMetadata_FileSize)(0), // 10: recordcollection.ReleaseMetadata.FileSize
}
var file_recordstats_proto_depIdxs = []int32{
	2,  // 0: recordstats.Config.complete_sales:type_name -> recordstats.CompleteSale
	1,  // 1: recordstats.Config.auditions:type_name -> recordstats.Auditioned
	5,  // 2: recordstats.Config.filed:type_name -> recordstats.Config.FiledEntry
	6,  // 3: recordstats.Config.filed_time:type_name -> recordstats.Config.FiledTimeEntry
	7,  // 4: recordstats.Config.lb_last_time:type_name -> recordstats.Config.LbLastTimeEntry
	8,  // 5: recordstats.Config.lb_last_time_high:type_name -> recordstats.Config.LbLastTimeHighEntry
	9,  // 6: recordstats.Config.last_listen:type_name -> recordstats.Config.LastListenEntry
	10, // 7: recordstats.Config.FiledEntry.value:type_name -> recordcollection.ReleaseMetadata.FileSize
	3,  // 8: recordstats.RecordStatsService.GetStats:input_type -> recordstats.GetStatsRequest
	4,  // 9: recordstats.RecordStatsService.GetStats:output_type -> recordstats.GetStatsResponse
	9,  // [9:10] is the sub-list for method output_type
	8,  // [8:9] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_recordstats_proto_init() }
func file_recordstats_proto_init() {
	if File_recordstats_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_recordstats_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recordstats_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Auditioned); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recordstats_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompleteSale); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recordstats_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recordstats_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_recordstats_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_recordstats_proto_goTypes,
		DependencyIndexes: file_recordstats_proto_depIdxs,
		MessageInfos:      file_recordstats_proto_msgTypes,
	}.Build()
	File_recordstats_proto = out.File
	file_recordstats_proto_rawDesc = nil
	file_recordstats_proto_goTypes = nil
	file_recordstats_proto_depIdxs = nil
}
